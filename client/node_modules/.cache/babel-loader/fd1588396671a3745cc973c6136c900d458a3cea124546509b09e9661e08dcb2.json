{"ast":null,"code":"// const NavProvider: FC<{ children: ReactNode }> = ({ children }) => {\n//   const [isNavOpen, setIsNavOpen] = useState<boolean>(false);\n//   const [activeLink, setActiveLink] = useState<string>(\"home\");\n//   const isMobile = window.matchMedia(\"max-width: 768px\");\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     closeNav();\n//   }, [navigate]);\n\n//   // useEffect(() => {\n//   //   if (!isMobile) {\n//   //     closeNav();\n//   //   }\n//   // }, [isMobile]);\n//   const openNav = () => {\n//     const nav = document.getElementById(\"nav\");\n//     nav?.classList.add(\"open\");\n//     nav?.classList.remove(\"closed\");\n\n//     setIsNavOpen(true);\n//   };\n\n//   const closeNav = () => {\n//     const nav = document.getElementById(\"nav\");\n//     if (!nav) return;\n//     nav.classList.remove(\"open\");\n//     nav.classList.add(\"closed\");\n//     setIsNavOpen(false);\n//   };\n\n//   return (\n//     <NavContext.Provider\n//       value={{\n//         isNavOpen,\n//         openNav,\n//         closeNav,\n//         activeLink,\n//         setActiveLink,\n//       }}\n//     >\n//       {children}\n//     </NavContext.Provider>\n//   );\n// };\n\nexport default useNav;","map":{"version":3,"names":["useNav"],"sources":["/Users/caleb/Dev/moons_footwear/client/src/context/NavContext.tsx"],"sourcesContent":["import {\n  createContext,\n  useContext,\n  useState,\n  ReactNode,\n  FC,\n  useEffect,\n} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport SideBar from \"../components/SideBar\";\n\ninterface UseNavProps {\n  isNavOpen: boolean;\n  openNav: () => void;\n  closeNav: () => void;\n  activeLink: string;\n  children: ReactNode;\n  setActiveLink: (link: string) => void;\n}\n\n// const NavProvider: FC<{ children: ReactNode }> = ({ children }) => {\n//   const [isNavOpen, setIsNavOpen] = useState<boolean>(false);\n//   const [activeLink, setActiveLink] = useState<string>(\"home\");\n//   const isMobile = window.matchMedia(\"max-width: 768px\");\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     closeNav();\n//   }, [navigate]);\n\n//   // useEffect(() => {\n//   //   if (!isMobile) {\n//   //     closeNav();\n//   //   }\n//   // }, [isMobile]);\n//   const openNav = () => {\n//     const nav = document.getElementById(\"nav\");\n//     nav?.classList.add(\"open\");\n//     nav?.classList.remove(\"closed\");\n\n//     setIsNavOpen(true);\n//   };\n\n//   const closeNav = () => {\n//     const nav = document.getElementById(\"nav\");\n//     if (!nav) return;\n//     nav.classList.remove(\"open\");\n//     nav.classList.add(\"closed\");\n//     setIsNavOpen(false);\n//   };\n\n//   return (\n//     <NavContext.Provider\n//       value={{\n//         isNavOpen,\n//         openNav,\n//         closeNav,\n//         activeLink,\n//         setActiveLink,\n//       }}\n//     >\n//       {children}\n//     </NavContext.Provider>\n//   );\n// };\n\nexport default useNav;\n"],"mappings":"AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
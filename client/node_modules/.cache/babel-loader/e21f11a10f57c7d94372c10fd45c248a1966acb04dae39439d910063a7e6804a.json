{"ast":null,"code":"import { create } from \"zustand\";\nimport { fetchProductBrand, fetchProductById, fetchProductCategory, fetchProductFlags, fetchProductImages, fetchProductVariants } from \"../api/products\";\nimport { fetchAllBrands, fetchAllCategories, fetchAllFlags, fetchAllSubcategories } from \"../api/tags\";\nexport const useProductStore = create((set, get) => ({\n  products: {},\n  productFlags: {},\n  productCategories: {},\n  productSubcategories: {},\n  productVariants: {},\n  productImages: {},\n  categories: [],\n  subcategories: [],\n  productBrands: {},\n  flags: [],\n  brands: [],\n  isLoading: false,\n  error: null,\n  getProductById: async id => {\n    if (get().products[id]) return;\n    try {\n      const res = await fetchProductById(id);\n      console.log({\n        result: res\n      });\n      set(state => ({\n        products: {\n          ...state.products,\n          [id]: res\n        }\n      }));\n    } catch (err) {\n      set({\n        error: err.message\n      });\n    }\n  },\n  getProductCategory: async id => {\n    if (get().productCategories[id]) return;\n    try {\n      const res = await fetchProductCategory(id);\n      set(state => ({\n        productCategories: {\n          ...state.productCategories,\n          [id]: res\n        }\n      }));\n    } catch (err) {\n      set({\n        error: err.message\n      });\n    }\n  },\n  getProductMetadata: async () => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const [categories, subcategories, flags, brands] = await Promise.all([fetchAllCategories(), fetchAllSubcategories(), fetchAllFlags(), fetchAllBrands()]);\n      set({\n        categories,\n        subcategories,\n        flags,\n        brands,\n        isLoading: false\n      });\n    } catch (err) {\n      set({\n        error: err.message,\n        isLoading: false\n      });\n    }\n  },\n  getProductVariants: async id => {\n    if (get().productVariants[id]) return;\n    try {\n      const res = await fetchProductVariants(id);\n      set(state => ({\n        productVariants: {\n          ...state.productVariants,\n          [id]: res\n        }\n      }));\n    } catch (err) {\n      set({\n        error: err.message\n      });\n    }\n  },\n  getProductImages: async id => {\n    if (get().productImages[id]) return;\n    try {\n      const res = await fetchProductImages(id);\n      set(state => ({\n        productImages: {\n          ...state.productImages,\n          [id]: res || []\n        }\n      }));\n    } catch (err) {\n      set({\n        error: err.message\n      });\n    }\n  },\n  getProductSubcategories: async id => {\n    if (get().productSubcategories[id]) return;\n    try {\n      const res = await fetchProductCategory(id);\n      set(state => ({\n        productCategories: {\n          ...state.productCategories,\n          [id]: res || []\n        }\n      }));\n    } catch (err) {\n      set({\n        error: err.message\n      });\n    }\n  },\n  getProductBrand: async id => {\n    if (get().productCategories[id]) return;\n    try {\n      const res = await fetchProductBrand(id);\n      set(state => ({\n        productBrands: {\n          ...state.productBrands,\n          [id]: res\n        }\n      }));\n    } catch (err) {\n      set({\n        error: err.message\n      });\n    }\n  },\n  getProductFlags: async id => {\n    if (get().productFlags[id]) return;\n    try {\n      const res = await fetchProductFlags(id);\n      set(state => ({\n        productFlags: {\n          ...state.productFlags,\n          [id]: res || []\n        }\n      }));\n    } catch (err) {\n      set({\n        error: err.message\n      });\n    }\n  }\n}));","map":{"version":3,"names":["create","fetchProductBrand","fetchProductById","fetchProductCategory","fetchProductFlags","fetchProductImages","fetchProductVariants","fetchAllBrands","fetchAllCategories","fetchAllFlags","fetchAllSubcategories","useProductStore","set","get","products","productFlags","productCategories","productSubcategories","productVariants","productImages","categories","subcategories","productBrands","flags","brands","isLoading","error","getProductById","id","res","console","log","result","state","err","message","getProductCategory","getProductMetadata","Promise","all","getProductVariants","getProductImages","getProductSubcategories","getProductBrand","getProductFlags"],"sources":["/Users/caleb/Dev/moons_footwear/client/src/stores/useProductStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport {\n  Product,\n  ProductBrand,\n  ProductCategory,\n  ProductFlag,\n  ProductImage,\n  ProductVariants,\n} from \"../../../shared/types\";\nimport {\n  fetchProductBrand,\n  fetchProductById,\n  fetchProductCategory,\n  fetchProductFlags,\n  fetchProductImages,\n  fetchProductVariants,\n} from \"../api/products\";\nimport {\n  fetchAllBrands,\n  fetchAllCategories,\n  fetchAllFlags,\n  fetchAllSubcategories,\n} from \"../api/tags\";\n\ninterface ProductStore {\n  products: Record<number, Product>;\n  productCategories: Record<number, ProductCategory>;\n  productSubcategories: Record<number, ProductCategory[]>;\n  productBrands: Record<number, ProductBrand>;\n  productImages: Record<number, ProductImage[]>;\n  productVariants: Record<number, ProductVariants>;\n  categories: ProductCategory[];\n  subcategories: ProductCategory[];\n  flags: ProductFlag[];\n  brands: ProductBrand[];\n  productFlags: Record<number, ProductFlag[]>;\n  isLoading: boolean;\n  error: string | null;\n\n  getProductById: (id: number) => Promise<void>;\n  getProductCategory: (id: number) => Promise<void>;\n  getProductSubcategories: (id: number) => Promise<void>;\n  getProductImages: (id: number) => Promise<void>;\n  getProductFlags: (id: number) => Promise<void>;\n  getProductBrand: (id: number) => Promise<void>;\n  getProductVariants: (id: number) => Promise<void>;\n  getProductMetadata: () => Promise<void>;\n}\nexport const useProductStore = create<ProductStore>((set, get) => ({\n  products: {},\n  productFlags: {},\n  productCategories: {},\n  productSubcategories: {},\n  productVariants: {},\n  productImages: {},\n  categories: [],\n  subcategories: [],\n  productBrands: {},\n  flags: [],\n  brands: [],\n  isLoading: false,\n  error: null,\n\n  getProductById: async (id: number) => {\n    if (get().products[id]) return;\n\n    try {\n      const res = await fetchProductById(id);\n      console.log({ result: res });\n      set((state) => ({\n        products: { ...state.products, [id]: res },\n      }));\n    } catch (err: any) {\n      set({ error: err.message });\n    }\n  },\n\n  getProductCategory: async (id: number) => {\n    if (get().productCategories[id]) return;\n    try {\n      const res = await fetchProductCategory(id);\n\n      set((state) => ({\n        productCategories: { ...state.productCategories, [id]: res },\n      }));\n    } catch (err: any) {\n      set({ error: err.message });\n    }\n  },\n  getProductMetadata: async () => {\n    set({ isLoading: true, error: null });\n    try {\n      const [categories, subcategories, flags, brands] = await Promise.all([\n        fetchAllCategories(),\n        fetchAllSubcategories(),\n        fetchAllFlags(),\n        fetchAllBrands(),\n      ]);\n      set({\n        categories,\n        subcategories,\n        flags,\n        brands,\n        isLoading: false,\n      });\n    } catch (err: any) {\n      set({ error: err.message, isLoading: false });\n    }\n  },\n  getProductVariants: async (id: number) => {\n    if (get().productVariants[id]) return;\n    try {\n      const res = await fetchProductVariants(id);\n      set((state) => ({\n        productVariants: {\n          ...state.productVariants,\n          [id]: res,\n        },\n      }));\n    } catch (err: any) {\n      set({ error: err.message });\n    }\n  },\n  getProductImages: async (id: number) => {\n    if (get().productImages[id]) return;\n    try {\n      const res = await fetchProductImages(id);\n      set((state) => ({\n        productImages: {\n          ...state.productImages,\n          [id]: res || [],\n        },\n      }));\n    } catch (err: any) {\n      set({ error: err.message });\n    }\n  },\n  getProductSubcategories: async (id: number) => {\n    if (get().productSubcategories[id]) return;\n\n    try {\n      const res = await fetchProductCategory(id);\n      set((state) => ({\n        productCategories: {\n          ...state.productCategories,\n          [id]: res || [],\n        },\n      }));\n    } catch (err: any) {\n      set({ error: err.message });\n    }\n  },\n  getProductBrand: async (id: number) => {\n    if (get().productCategories[id]) return;\n\n    try {\n      const res = await fetchProductBrand(id);\n      set((state) => ({\n        productBrands: {\n          ...state.productBrands,\n          [id]: res,\n        },\n      }));\n    } catch (err: any) {\n      set({ error: err.message });\n    }\n  },\n\n  getProductFlags: async (id: number) => {\n    if (get().productFlags[id]) return;\n\n    try {\n      const res = await fetchProductFlags(id);\n      set((state) => ({\n        productFlags: {\n          ...state.productFlags,\n          [id]: res || [],\n        },\n      }));\n    } catch (err: any) {\n      set({ error: err.message });\n    }\n  },\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
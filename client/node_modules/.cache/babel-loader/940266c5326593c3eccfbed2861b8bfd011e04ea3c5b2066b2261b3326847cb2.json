{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nvar _exec$, _exec;\nfunction _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return _assertThisInitialized(t);\n}\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nfunction _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && _setPrototypeOf(t, e);\n}\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nvar React = require('react');\nvar _require = require('focus-trap'),\n  createFocusTrap = _require.createFocusTrap;\nvar _require2 = require('tabbable'),\n  isFocusable = _require2.isFocusable;\n\n/**\n * The major version of React currently running.\n * @type {number}\n */\nvar reactVerMajor = parseInt((_exec$ = (_exec = /^(\\d+)\\./.exec(React.version)) === null || _exec === void 0 ? void 0 : _exec[1]) !== null && _exec$ !== void 0 ? _exec$ : 0, 10);\n\n/**\n * @type {import('../index.d.ts').FocusTrap}\n */\nvar FocusTrap = /*#__PURE__*/function (_React$Component) {\n  function FocusTrap(props) {\n    var _this;\n    _classCallCheck(this, FocusTrap);\n    _this = _callSuper(this, FocusTrap, [props]);\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n    _defineProperty(_this, \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n        optionValue = optionValue.apply(void 0, params);\n      }\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        }\n        // else, empty string (invalid), null (invalid), 0 (invalid)\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n      return node;\n    });\n    _this.handleDeactivate = _this.handleDeactivate.bind(_this);\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_this);\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_this);\n\n    // focus-trap options used internally when creating the trap\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    };\n\n    // original options provided by the consumer\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    }\n\n    // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n    _this.outsideClick = null;\n\n    // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n    _this.focusTrapElements = props.containerElements || [];\n\n    // now we remember what the currently focused element is, not relying on focus-trap\n    _this.updatePreviousElement();\n    return _this;\n  }\n\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n  _inherits(FocusTrap, _React$Component);\n  return _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n\n    /** Update the previously focused element with the currently focused element. */\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate\n        // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n        var canReturnFocus = !!(\n        // did the consumer allow it?\n\n        _this2.originalOptions.returnFocusOnDeactivate &&\n        // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && (\n        // was there an outside click that allowed deactivation?\n        !_this2.outsideClick ||\n        // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation &&\n        // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions))\n\n        // if no, the restore focus to `returnFocusNode` at this point\n        );\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n          preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n        }\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (this.focusTrap) {\n        // trap already exists: it's possible we're in StrictMode and we're being remounted,\n        //  in which case, we will have deactivated the trap when we got unmounted (remember,\n        //  StrictMode, in development, purposely unmounts and remounts components after\n        //  mounting them the first time to make sure they have reusable state,\n        //  @see https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state) so now\n        //  we need to restore the state of the trap according to our component state\n        // NOTE: Strict mode __violates__ assumptions about the `componentWillUnmount()` API\n        //  which clearly states -- even for React 18 -- that, \"Once a component instance is\n        //  unmounted, __it will never be mounted again.__\" (emphasis ours). So when we get\n        //  unmounted, we assume we're gone forever and we deactivate the trap. But then\n        //  we get remounted and we're supposed to restore state. But if you had paused,\n        //  we've now deactivated (we don't know we're amount to get remounted again)\n        //  which means we need to reactivate and then pause. Otherwise, do nothing.\n        if (this.props.active && !this.focusTrap.active) {\n          this.focusTrap.activate();\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      } else {\n        var nodesExist = this.focusTrapElements.some(Boolean);\n        if (nodesExist) {\n          this.focusTrap = this.props._createFocusTrap(this.focusTrapElements, this.internalOptions);\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      }\n      // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        }\n\n        // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n        var callbackRef = function callbackRef(element) {\n          var containerElements = _this3.props.containerElements;\n          if (child) {\n            // React 19 moved the `ref` to an official prop\n            if (reactVerMajor >= 19) {\n              if (typeof child.props.ref === 'function') {\n                child.props.ref(element);\n              } else if (child.props.ref) {\n                child.props.ref.current = element;\n              }\n            } else {\n              // older versions of React had the `ref` separate from props (still works in R19\n              //  but results in a deprecation warning in Dev builds)\n              if (typeof child.ref === 'function') {\n                child.ref(element);\n              } else if (child.ref) {\n                child.ref.current = element;\n              }\n            }\n          }\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n        var childWithRef = React.cloneElement(child, {\n          ref: callbackRef\n        });\n        return childWithRef;\n      }\n      return null;\n    }\n  }]);\n}(React.Component); // NOTE: While React 19 REMOVED support for `propTypes`, support for `defaultProps`\n//  __for class components ONLY__ remains: \"Class components will continue to support\n//  defaultProps since there is no ES6 alternative.\"\n//  @see https://react.dev/blog/2024/04/25/react-19-upgrade-guide#removed-proptypes-and-defaultprops\nFocusTrap.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\n\n// 🔺 DEPRECATED: default export\nmodule.exports = FocusTrap;\n\n// named export\nmodule.exports.FocusTrap = FocusTrap;","map":{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","_exec$","_exec","_classCallCheck","a","n","TypeError","_defineProperties","e","r","t","length","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","_assertThisInitialized","ReferenceError","Boolean","valueOf","call","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","create","value","_setPrototypeOf","_defineProperty","i","_toPrimitive","toPrimitive","String","Number","React","require","_require","createFocusTrap","_require2","isFocusable","reactVerMajor","parseInt","exec","version","FocusTrap","_React$Component","props","_this","optionName","_this$internalOptions","optionValue","internalOptions","originalOptions","_len","arguments","params","Array","_key","undefined","Error","concat","node","_this$getDocument","getDocument","querySelector","handleDeactivate","handlePostDeactivate","handleClickOutsideDeactivates","returnFocusOnDeactivate","checkCanReturnFocus","onDeactivate","onPostDeactivate","clickOutsideDeactivates","focusTrapOptions","hasOwnProperty","outsideClick","focusTrapElements","containerElements","updatePreviousElement","document","getReturnFocusNode","getNodeForOption","previouslyFocusedElement","currentDocument","activeElement","deactivateTrap","focusTrap","active","deactivate","returnFocus","event","allowDeactivation","target","_this2","finishDeactivation","returnFocusNode","canReturnFocus","focus","tabbableOptions","_this2$internalOption","preventScroll","then","setupFocusTrap","activate","paused","pause","nodesExist","some","_createFocusTrap","componentDidMount","componentDidUpdate","prevProps","updateContainerElements","hasActivated","hasDeactivated","hasPaused","hasUnpaused","unpause","componentWillUnmount","render","_this3","child","children","Children","only","type","Fragment","callbackRef","element","ref","current","childWithRef","cloneElement","Component","defaultProps","module","exports"],"sources":["/Users/caleb/Dev/moons_footwear/client/node_modules/focus-trap-react/dist/focus-trap-react.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _exec$, _exec;\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar React = require('react');\nvar _require = require('focus-trap'),\n  createFocusTrap = _require.createFocusTrap;\nvar _require2 = require('tabbable'),\n  isFocusable = _require2.isFocusable;\n\n/**\n * The major version of React currently running.\n * @type {number}\n */\nvar reactVerMajor = parseInt((_exec$ = (_exec = /^(\\d+)\\./.exec(React.version)) === null || _exec === void 0 ? void 0 : _exec[1]) !== null && _exec$ !== void 0 ? _exec$ : 0, 10);\n\n/**\n * @type {import('../index.d.ts').FocusTrap}\n */\nvar FocusTrap = /*#__PURE__*/function (_React$Component) {\n  function FocusTrap(props) {\n    var _this;\n    _classCallCheck(this, FocusTrap);\n    _this = _callSuper(this, FocusTrap, [props]);\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n    _defineProperty(_this, \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n        optionValue = optionValue.apply(void 0, params);\n      }\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        }\n        // else, empty string (invalid), null (invalid), 0 (invalid)\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n      return node;\n    });\n    _this.handleDeactivate = _this.handleDeactivate.bind(_this);\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_this);\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_this);\n\n    // focus-trap options used internally when creating the trap\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    };\n\n    // original options provided by the consumer\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    }\n\n    // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n    _this.outsideClick = null;\n\n    // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n    _this.focusTrapElements = props.containerElements || [];\n\n    // now we remember what the currently focused element is, not relying on focus-trap\n    _this.updatePreviousElement();\n    return _this;\n  }\n\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n  _inherits(FocusTrap, _React$Component);\n  return _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n\n    /** Update the previously focused element with the currently focused element. */\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate\n        // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n        var canReturnFocus = !!(\n        // did the consumer allow it?\n\n        _this2.originalOptions.returnFocusOnDeactivate && // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && (\n        // was there an outside click that allowed deactivation?\n        !_this2.outsideClick ||\n        // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation &&\n        // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions))\n\n        // if no, the restore focus to `returnFocusNode` at this point\n        );\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n          preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n        }\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (this.focusTrap) {\n        // trap already exists: it's possible we're in StrictMode and we're being remounted,\n        //  in which case, we will have deactivated the trap when we got unmounted (remember,\n        //  StrictMode, in development, purposely unmounts and remounts components after\n        //  mounting them the first time to make sure they have reusable state,\n        //  @see https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state) so now\n        //  we need to restore the state of the trap according to our component state\n        // NOTE: Strict mode __violates__ assumptions about the `componentWillUnmount()` API\n        //  which clearly states -- even for React 18 -- that, \"Once a component instance is\n        //  unmounted, __it will never be mounted again.__\" (emphasis ours). So when we get\n        //  unmounted, we assume we're gone forever and we deactivate the trap. But then\n        //  we get remounted and we're supposed to restore state. But if you had paused,\n        //  we've now deactivated (we don't know we're amount to get remounted again)\n        //  which means we need to reactivate and then pause. Otherwise, do nothing.\n        if (this.props.active && !this.focusTrap.active) {\n          this.focusTrap.activate();\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      } else {\n        var nodesExist = this.focusTrapElements.some(Boolean);\n        if (nodesExist) {\n          this.focusTrap = this.props._createFocusTrap(this.focusTrapElements, this.internalOptions);\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      }\n      // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        }\n\n        // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n        var callbackRef = function callbackRef(element) {\n          var containerElements = _this3.props.containerElements;\n          if (child) {\n            // React 19 moved the `ref` to an official prop\n            if (reactVerMajor >= 19) {\n              if (typeof child.props.ref === 'function') {\n                child.props.ref(element);\n              } else if (child.props.ref) {\n                child.props.ref.current = element;\n              }\n            } else {\n              // older versions of React had the `ref` separate from props (still works in R19\n              //  but results in a deprecation warning in Dev builds)\n              if (typeof child.ref === 'function') {\n                child.ref(element);\n              } else if (child.ref) {\n                child.ref.current = element;\n              }\n            }\n          }\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n        var childWithRef = React.cloneElement(child, {\n          ref: callbackRef\n        });\n        return childWithRef;\n      }\n      return null;\n    }\n  }]);\n}(React.Component); // NOTE: While React 19 REMOVED support for `propTypes`, support for `defaultProps`\n//  __for class components ONLY__ remains: \"Class components will continue to support\n//  defaultProps since there is no ES6 alternative.\"\n//  @see https://react.dev/blog/2024/04/25/react-19-upgrade-guide#removed-proptypes-and-defaultprops\nFocusTrap.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\n\n// 🔺 DEPRECATED: default export\nmodule.exports = FocusTrap;\n\n// named export\nmodule.exports.FocusTrap = FocusTrap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
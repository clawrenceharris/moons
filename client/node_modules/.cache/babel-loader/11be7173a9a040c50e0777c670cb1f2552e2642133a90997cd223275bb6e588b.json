{"ast":null,"code":"import { create } from \"zustand\";\nexport const useCartStore = create((set, get) => ({\n  cart: [],\n  isCartOpen: false,\n  subtotal: get().cart.reduce((total, current) => total + current.price, 0),\n  closeCart: () => {\n    get().isCartOpen = false;\n  },\n  openCart: () => {\n    get().isCartOpen = true;\n  },\n  addItem: newItem => {\n    const existing = get().cart.find(item => item.id === newItem.id && item.size === newItem.size && item.color === newItem.color);\n    if (existing) {\n      set({\n        cart: get().cart.map(item => item === existing ? {\n          ...item,\n          quantity: item.quantity + newItem.quantity\n        } : item)\n      });\n    } else {\n      set({\n        cart: [...get().cart, newItem]\n      });\n    }\n  },\n  removeItem: productId => {\n    set({\n      cart: get().cart.filter(item => item.id !== productId)\n    });\n  },\n  clearCart: () => set({\n    cart: []\n  })\n}));\nexport default useCartStore;","map":{"version":3,"names":["create","useCartStore","set","get","cart","isCartOpen","subtotal","reduce","total","current","price","closeCart","openCart","addItem","newItem","existing","find","item","id","size","color","map","quantity","removeItem","productId","filter","clearCart"],"sources":["/Users/caleb/Dev/moons_footwear/client/src/stores/useCartStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { CartItem } from \"../../../shared/types\";\n\ninterface CartStore {\n  cart: CartItem[];\n  subtotal: number;\n  addItem: (item: CartItem) => void;\n  removeItem: (productId: number) => void;\n  clearCart: () => void;\n  isCartOpen: boolean;\n\n  openCart: () => void;\n  closeCart: () => void;\n}\n\nexport const useCartStore = create<CartStore>((set, get) => ({\n  cart: [],\n  isCartOpen: false,\n  subtotal: get().cart.reduce((total, current) => total + current.price, 0),\n  closeCart: () => {\n    get().isCartOpen = false;\n  },\n  openCart: () => {\n    get().isCartOpen = true;\n  },\n\n  addItem: (newItem) => {\n    const existing = get().cart.find(\n      (item) =>\n        item.id === newItem.id &&\n        item.size === newItem.size &&\n        item.color === newItem.color\n    );\n    if (existing) {\n      set({\n        cart: get().cart.map((item) =>\n          item === existing\n            ? { ...item, quantity: item.quantity + newItem.quantity }\n            : item\n        ),\n      });\n    } else {\n      set({ cart: [...get().cart, newItem] });\n    }\n  },\n\n  removeItem: (productId) => {\n    set({ cart: get().cart.filter((item) => item.id !== productId) });\n  },\n\n  clearCart: () => set({ cart: [] }),\n}));\n\nexport default useCartStore;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAehC,OAAO,MAAMC,YAAY,GAAGD,MAAM,CAAY,CAACE,GAAG,EAAEC,GAAG,MAAM;EAC3DC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAEH,GAAG,CAAC,CAAC,CAACC,IAAI,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAKD,KAAK,GAAGC,OAAO,CAACC,KAAK,EAAE,CAAC,CAAC;EACzEC,SAAS,EAAEA,CAAA,KAAM;IACfR,GAAG,CAAC,CAAC,CAACE,UAAU,GAAG,KAAK;EAC1B,CAAC;EACDO,QAAQ,EAAEA,CAAA,KAAM;IACdT,GAAG,CAAC,CAAC,CAACE,UAAU,GAAG,IAAI;EACzB,CAAC;EAEDQ,OAAO,EAAGC,OAAO,IAAK;IACpB,MAAMC,QAAQ,GAAGZ,GAAG,CAAC,CAAC,CAACC,IAAI,CAACY,IAAI,CAC7BC,IAAI,IACHA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,IACtBD,IAAI,CAACE,IAAI,KAAKL,OAAO,CAACK,IAAI,IAC1BF,IAAI,CAACG,KAAK,KAAKN,OAAO,CAACM,KAC3B,CAAC;IACD,IAAIL,QAAQ,EAAE;MACZb,GAAG,CAAC;QACFE,IAAI,EAAED,GAAG,CAAC,CAAC,CAACC,IAAI,CAACiB,GAAG,CAAEJ,IAAI,IACxBA,IAAI,KAAKF,QAAQ,GACb;UAAE,GAAGE,IAAI;UAAEK,QAAQ,EAAEL,IAAI,CAACK,QAAQ,GAAGR,OAAO,CAACQ;QAAS,CAAC,GACvDL,IACN;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLf,GAAG,CAAC;QAAEE,IAAI,EAAE,CAAC,GAAGD,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEU,OAAO;MAAE,CAAC,CAAC;IACzC;EACF,CAAC;EAEDS,UAAU,EAAGC,SAAS,IAAK;IACzBtB,GAAG,CAAC;MAAEE,IAAI,EAAED,GAAG,CAAC,CAAC,CAACC,IAAI,CAACqB,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKM,SAAS;IAAE,CAAC,CAAC;EACnE,CAAC;EAEDE,SAAS,EAAEA,CAAA,KAAMxB,GAAG,CAAC;IAAEE,IAAI,EAAE;EAAG,CAAC;AACnC,CAAC,CAAC,CAAC;AAEH,eAAeH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
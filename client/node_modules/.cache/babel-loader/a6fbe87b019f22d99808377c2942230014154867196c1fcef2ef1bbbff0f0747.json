{"ast":null,"code":"var _jsxFileName = \"/Users/caleb/Dev/moons_footwear/client/src/components/SideBar/SideBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./SideBar.css\";\nimport { FocusTrap } from \"focus-trap-react\";\nimport { useAnimationToggle } from \"../../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SideBar = ({\n  children,\n  containerStyle,\n  contentStyle,\n  isOpen,\n  onClose,\n  initialX\n}) => {\n  _s();\n  const [isTrapped, setIsTrapped] = React.useState(false);\n  const ref = useRef(null);\n  const {\n    isAnimating\n  } = useAnimationToggle({\n    value: isOpen,\n    duration: 2000\n  });\n  return /*#__PURE__*/_jsxDEV(FocusTrap, {\n    focusTrapOptions: {\n      onPostDeactivate: () => {\n        setIsTrapped(false);\n      },\n      onActivate: () => {\n        setIsTrapped(true);\n      },\n      clickOutsideDeactivates: true,\n      returnFocusOnDeactivate: true\n    },\n    active: isOpen,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      hidden: !isOpen && !isTrapped && !isAnimating,\n      className: `sidebar-container ${isOpen ? \"open\" : \"closed\"}`,\n      style: {\n        transform: `translateX(${isOpen ? 0 : initialX})`,\n        ...containerStyle\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: contentStyle,\n        className: \"sidebar-content\",\n        children: /*#__PURE__*/React.cloneElement(children, {\n          isOpen,\n          onClose\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SideBar, \"hocmYoQQopdXnqWJmEzKoU3nDuw=\", false, function () {\n  return [useAnimationToggle];\n});\n_c = SideBar;\nexport default SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["React","useRef","FocusTrap","useAnimationToggle","jsxDEV","_jsxDEV","SideBar","children","containerStyle","contentStyle","isOpen","onClose","initialX","_s","isTrapped","setIsTrapped","useState","ref","isAnimating","value","duration","focusTrapOptions","onPostDeactivate","onActivate","clickOutsideDeactivates","returnFocusOnDeactivate","active","hidden","className","style","transform","cloneElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/caleb/Dev/moons_footwear/client/src/components/SideBar/SideBar.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport \"./SideBar.css\";\nimport { FocusTrap } from \"focus-trap-react\";\nimport { useAnimationToggle } from \"../../hooks\";\n\nexport interface SideBarContentProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  onClose?: () => void;\n  isOpen?: boolean;\n}\n\ninterface SideBarProps {\n  children: React.ReactElement<SideBarContentProps>;\n  containerStyle?: React.CSSProperties;\n  contentStyle?: React.CSSProperties;\n  isOpen: boolean;\n  onClose?: () => void;\n  onOpen?: () => void;\n  initialX?: string;\n}\nconst SideBar: React.FC<SideBarProps> = ({\n  children,\n  containerStyle,\n  contentStyle,\n  isOpen,\n  onClose,\n  initialX,\n}) => {\n  const [isTrapped, setIsTrapped] = React.useState(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const { isAnimating } = useAnimationToggle({\n    value: isOpen,\n    duration: 2000,\n  });\n  return (\n    <FocusTrap\n      focusTrapOptions={{\n        onPostDeactivate: () => {\n          setIsTrapped(false);\n        },\n        onActivate: () => {\n          setIsTrapped(true);\n        },\n        clickOutsideDeactivates: true,\n        returnFocusOnDeactivate: true,\n      }}\n      active={isOpen}\n    >\n      <div\n        ref={ref}\n        hidden={!isOpen && !isTrapped && !isAnimating}\n        className={`sidebar-container ${isOpen ? \"open\" : \"closed\"}`}\n        style={{\n          transform: `translateX(${isOpen ? 0 : initialX})`,\n          ...containerStyle,\n        }}\n      >\n        <div style={contentStyle} className=\"sidebar-content\">\n          {React.cloneElement(children, {\n            isOpen,\n            onClose,\n          })}\n        </div>\n      </div>\n    </FocusTrap>\n  );\n};\n\nexport default SideBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAO,eAAe;AACtB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,kBAAkB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBjD,MAAMC,OAA+B,GAAGA,CAAC;EACvCC,QAAQ;EACRC,cAAc;EACdC,YAAY;EACZC,MAAM;EACNC,OAAO;EACPC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMC,GAAG,GAAGhB,MAAM,CAAiB,IAAI,CAAC;EACxC,MAAM;IAAEiB;EAAY,CAAC,GAAGf,kBAAkB,CAAC;IACzCgB,KAAK,EAAET,MAAM;IACbU,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,oBACEf,OAAA,CAACH,SAAS;IACRmB,gBAAgB,EAAE;MAChBC,gBAAgB,EAAEA,CAAA,KAAM;QACtBP,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC;MACDQ,UAAU,EAAEA,CAAA,KAAM;QAChBR,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC;MACDS,uBAAuB,EAAE,IAAI;MAC7BC,uBAAuB,EAAE;IAC3B,CAAE;IACFC,MAAM,EAAEhB,MAAO;IAAAH,QAAA,eAEfF,OAAA;MACEY,GAAG,EAAEA,GAAI;MACTU,MAAM,EAAE,CAACjB,MAAM,IAAI,CAACI,SAAS,IAAI,CAACI,WAAY;MAC9CU,SAAS,EAAE,qBAAqBlB,MAAM,GAAG,MAAM,GAAG,QAAQ,EAAG;MAC7DmB,KAAK,EAAE;QACLC,SAAS,EAAE,cAAcpB,MAAM,GAAG,CAAC,GAAGE,QAAQ,GAAG;QACjD,GAAGJ;MACL,CAAE;MAAAD,QAAA,eAEFF,OAAA;QAAKwB,KAAK,EAAEpB,YAAa;QAACmB,SAAS,EAAC,iBAAiB;QAAArB,QAAA,eAClDP,KAAK,CAAC+B,YAAY,CAACxB,QAAQ,EAAE;UAC5BG,MAAM;UACNC;QACF,CAAC;MAAC;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACtB,EAAA,CA/CIP,OAA+B;EAAA,QAWXH,kBAAkB;AAAA;AAAAiC,EAAA,GAXtC9B,OAA+B;AAiDrC,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
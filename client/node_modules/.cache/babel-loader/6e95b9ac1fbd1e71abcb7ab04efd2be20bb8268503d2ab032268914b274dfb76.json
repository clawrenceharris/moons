{"ast":null,"code":"var _jsxFileName = \"/Users/caleb/Dev/moons_footwear/client/src/pages/Shop/Shop.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ProductGridItem, SearchBar } from \"../../components\";\nimport { formatCategory } from \"../../utils\";\nimport \"./Shop.css\";\nimport NotFound from \"../NotFound/NotFound\";\nimport { useShop } from \"../../context/ShopContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = () => {\n  _s();\n  const {\n    category = \"All\",\n    subcategory\n  } = useParams();\n  const {\n    products\n  } = useShop();\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const [notFound, setNotFound] = useState(false);\n  useEffect(() => {\n    // Build query parameters\n    const params = {\n      category\n    };\n    if (subcategory) params.subcategory = subcategory;\n    setTitle(subcategory ? `${formatCategory(category).toUpperCase()} → ${formatCategory(subcategory)}` : `${formatCategory(category).toUpperCase()}`);\n    setFilteredProducts(products.filter(item => item.category.name === category).filter(item => subcategory ? item.subcategory.name === subcategory : true));\n  }, [category, products, subcategory]);\n  if (notFound) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Shop \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), products.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-grid\",\n      children: products.map(item => /*#__PURE__*/_jsxDEV(ProductGridItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-centered\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Looks like there are no items in this category. Try checking back later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Shop, \"cIFJVJdoRlTUYz2qblWK45pvVzU=\", false, function () {\n  return [useParams, useShop, useNavigate];\n});\n_c = Shop;\nexport default Shop;\nvar _c;\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","ProductGridItem","SearchBar","formatCategory","NotFound","useShop","jsxDEV","_jsxDEV","Shop","_s","category","subcategory","products","filteredProducts","setFilteredProducts","title","setTitle","navigate","notFound","setNotFound","params","toUpperCase","filter","item","name","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","id","_c","$RefreshReg$"],"sources":["/Users/caleb/Dev/moons_footwear/client/src/pages/Shop/Shop.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Product as ProductType } from \"../../../../shared/types\";\nimport { fetchProductsByCategory } from \"../../api/shop\";\nimport { ProductGridItem, SearchBar } from \"../../components\";\nimport { formatCategory } from \"../../utils\";\nimport \"./Shop.css\";\nimport NotFound from \"../NotFound/NotFound\";\nimport { useShop } from \"../../context/ShopContext\";\nconst Shop: React.FC = () => {\n  const { category = \"All\", subcategory } = useParams();\n  const { products } = useShop();\n  const [filteredProducts, setFilteredProducts] = useState<ProductType[]>([]);\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const [notFound, setNotFound] = useState(false);\n  useEffect(() => {\n    // Build query parameters\n    const params: Record<string, string> = { category };\n    if (subcategory) params.subcategory = subcategory;\n    setTitle(\n      subcategory\n        ? `${formatCategory(category).toUpperCase()} → ${formatCategory(\n            subcategory\n          )}`\n        : `${formatCategory(category).toUpperCase()}`\n    );\n\n    setFilteredProducts(\n      products\n        .filter((item) => item.category.name === category)\n        .filter((item) =>\n          subcategory ? item.subcategory.name === subcategory : true\n        )\n    );\n  }, [category, products, subcategory]);\n\n  if (notFound) {\n    return <NotFound />;\n  }\n\n  return (\n    <div className=\"shop-container\">\n      <SearchBar />\n\n      <h1>Shop {title}</h1>\n      {products.length > 0 ? (\n        <div className=\"content-grid\">\n          {products.map((item) => (\n            <ProductGridItem key={item.id} item={item} />\n          ))}\n        </div>\n      ) : (\n        <div className=\"content-centered\">\n          <p>\n            Looks like there are no items in this category. Try checking back\n            later.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Shop;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
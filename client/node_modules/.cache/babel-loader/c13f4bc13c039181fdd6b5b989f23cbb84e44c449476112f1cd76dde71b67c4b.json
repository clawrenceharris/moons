{"ast":null,"code":"import { create } from \"zustand\";\nexport const useCartStore = create((set, get) => {\n  var _get;\n  return {\n    cart: [],\n    subtotal: (_get = get()) !== null && _get !== void 0 && _get.cart ? get().cart.reduce((total, current) => total + current.price, 0) : 0,\n    addItem: newItem => {\n      const existing = get().cart.find(item => item.id === newItem.id && item.size === newItem.size && item.color === newItem.color);\n      if (existing) {\n        set({\n          cart: get().cart.map(item => item === existing ? {\n            ...item,\n            quantity: item.quantity + newItem.quantity\n          } : item)\n        });\n      } else {\n        set({\n          cart: [...get().cart, newItem]\n        });\n      }\n    },\n    removeItem: productId => {\n      set({\n        cart: get().cart.filter(item => item.id !== productId)\n      });\n    },\n    clearCart: () => set({\n      cart: []\n    })\n  };\n});\nexport default useCartStore;","map":{"version":3,"names":["create","useCartStore","set","get","_get","cart","subtotal","reduce","total","current","price","addItem","newItem","existing","find","item","id","size","color","map","quantity","removeItem","productId","filter","clearCart"],"sources":["/Users/caleb/Dev/moons_footwear/client/src/stores/useCartStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { CartItem } from \"../../../shared/types\";\n\ninterface CartStore {\n  cart: CartItem[];\n  subtotal: number;\n  addItem: (item: CartItem) => void;\n  removeItem: (productId: number) => void;\n  clearCart: () => void;\n}\n\nexport const useCartStore = create<CartStore>((set, get) => ({\n  cart: [],\n  subtotal: get()?.cart\n    ? get().cart.reduce((total, current) => total + current.price, 0)\n    : 0,\n\n  addItem: (newItem) => {\n    const existing = get().cart.find(\n      (item) =>\n        item.id === newItem.id &&\n        item.size === newItem.size &&\n        item.color === newItem.color\n    );\n    if (existing) {\n      set({\n        cart: get().cart.map((item) =>\n          item === existing\n            ? { ...item, quantity: item.quantity + newItem.quantity }\n            : item\n        ),\n      });\n    } else {\n      set({ cart: [...get().cart, newItem] });\n    }\n  },\n\n  removeItem: (productId) => {\n    set({ cart: get().cart.filter((item) => item.id !== productId) });\n  },\n\n  clearCart: () => set({ cart: [] }),\n}));\n\nexport default useCartStore;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAWhC,OAAO,MAAMC,YAAY,GAAGD,MAAM,CAAY,CAACE,GAAG,EAAEC,GAAG;EAAA,IAAAC,IAAA;EAAA,OAAM;IAC3DC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,CAAAF,IAAA,GAAAD,GAAG,CAAC,CAAC,cAAAC,IAAA,eAALA,IAAA,CAAOC,IAAI,GACjBF,GAAG,CAAC,CAAC,CAACE,IAAI,CAACE,MAAM,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAKD,KAAK,GAAGC,OAAO,CAACC,KAAK,EAAE,CAAC,CAAC,GAC/D,CAAC;IAELC,OAAO,EAAGC,OAAO,IAAK;MACpB,MAAMC,QAAQ,GAAGV,GAAG,CAAC,CAAC,CAACE,IAAI,CAACS,IAAI,CAC7BC,IAAI,IACHA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,IACtBD,IAAI,CAACE,IAAI,KAAKL,OAAO,CAACK,IAAI,IAC1BF,IAAI,CAACG,KAAK,KAAKN,OAAO,CAACM,KAC3B,CAAC;MACD,IAAIL,QAAQ,EAAE;QACZX,GAAG,CAAC;UACFG,IAAI,EAAEF,GAAG,CAAC,CAAC,CAACE,IAAI,CAACc,GAAG,CAAEJ,IAAI,IACxBA,IAAI,KAAKF,QAAQ,GACb;YAAE,GAAGE,IAAI;YAAEK,QAAQ,EAAEL,IAAI,CAACK,QAAQ,GAAGR,OAAO,CAACQ;UAAS,CAAC,GACvDL,IACN;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLb,GAAG,CAAC;UAAEG,IAAI,EAAE,CAAC,GAAGF,GAAG,CAAC,CAAC,CAACE,IAAI,EAAEO,OAAO;QAAE,CAAC,CAAC;MACzC;IACF,CAAC;IAEDS,UAAU,EAAGC,SAAS,IAAK;MACzBpB,GAAG,CAAC;QAAEG,IAAI,EAAEF,GAAG,CAAC,CAAC,CAACE,IAAI,CAACkB,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKM,SAAS;MAAE,CAAC,CAAC;IACnE,CAAC;IAEDE,SAAS,EAAEA,CAAA,KAAMtB,GAAG,CAAC;MAAEG,IAAI,EAAE;IAAG,CAAC;EACnC,CAAC;AAAA,CAAC,CAAC;AAEH,eAAeJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
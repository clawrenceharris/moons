{"ast":null,"code":"var _jsxFileName = \"/Users/caleb/Dev/moons_footwear/client/src/context/NavContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavContext = /*#__PURE__*/createContext(undefined);\nconst useLayout = () => {\n  _s();\n  const context = useContext(NavContext);\n  if (!context) {\n    throw new Error(\"useNav must be used within a Navigation Provider\");\n  }\n  return context;\n};\n_s(useLayout, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst LayoutProvider = ({\n  children\n}) => {\n  _s2();\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const [activeLink, setActiveLink] = useState(\"home\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    closeNav();\n  }, [navigate]);\n\n  // useEffect(() => {\n  //   if (!isMobile) {\n  //     closeNav();\n  //   }\n  // }, [isMobile]);\n  const openNav = () => {\n    const nav = document.getElementById(\"nav\");\n    nav === null || nav === void 0 ? void 0 : nav.classList.add(\"open\");\n    nav === null || nav === void 0 ? void 0 : nav.classList.remove(\"closed\");\n    setIsNavOpen(true);\n  };\n  const closeNav = () => {\n    const nav = document.getElementById(\"nav\");\n    if (!nav) return;\n    nav.classList.remove(\"open\");\n    nav.classList.add(\"closed\");\n    setIsNavOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(NavContext.Provider, {\n    value: {\n      isNavOpen,\n      openSidebar: openNav,\n      closeNav,\n      activeLink,\n      setActiveLink\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s2(LayoutProvider, \"vY5VkuJzSow55Mc5BgG1Jov1g/Y=\", false, function () {\n  return [useNavigate];\n});\n_c = LayoutProvider;\nexport { useLayout as useNav, LayoutProvider as NavProvider };\nvar _c;\n$RefreshReg$(_c, \"LayoutProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","NavContext","undefined","useLayout","_s","context","Error","LayoutProvider","children","_s2","isNavOpen","setIsNavOpen","activeLink","setActiveLink","navigate","closeNav","openNav","nav","document","getElementById","classList","add","remove","Provider","value","openSidebar","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNav","NavProvider","$RefreshReg$"],"sources":["/Users/caleb/Dev/moons_footwear/client/src/context/NavContext.tsx"],"sourcesContent":["import {\n  createContext,\n  useContext,\n  useState,\n  ReactNode,\n  FC,\n  useEffect,\n} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface NavContextType {\n  isNavOpen: boolean;\n  openSidebar: () => void;\n  closeNav: () => void;\n  activeLink: string;\n  setActiveLink: (link: string) => void;\n}\n\nconst NavContext = createContext<NavContextType | undefined>(undefined);\n\nconst useLayout = () => {\n  const context = useContext(NavContext);\n  if (!context) {\n    throw new Error(\"useNav must be used within a Navigation Provider\");\n  }\n  return context;\n};\ninterface NavProviderProps {\n  children: ReactNode;\n}\nconst LayoutProvider: FC<NavProviderProps> = ({ children }) => {\n  const [isNavOpen, setIsNavOpen] = useState<boolean>(false);\n  const [activeLink, setActiveLink] = useState<string>(\"home\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    closeNav();\n  }, [navigate]);\n\n  // useEffect(() => {\n  //   if (!isMobile) {\n  //     closeNav();\n  //   }\n  // }, [isMobile]);\n  const openNav = () => {\n    const nav = document.getElementById(\"nav\");\n    nav?.classList.add(\"open\");\n    nav?.classList.remove(\"closed\");\n\n    setIsNavOpen(true);\n  };\n\n  const closeNav = () => {\n    const nav = document.getElementById(\"nav\");\n    if (!nav) return;\n    nav.classList.remove(\"open\");\n    nav.classList.add(\"closed\");\n    setIsNavOpen(false);\n  };\n\n  return (\n    <NavContext.Provider\n      value={{\n        isNavOpen,\n        openSidebar: openNav,\n        closeNav,\n        activeLink,\n        setActiveLink,\n      }}\n    >\n      {children}\n    </NavContext.Provider>\n  );\n};\n\nexport { useLayout as useNav, LayoutProvider as NavProvider };\n"],"mappings":";;;AAAA,SACEA,aAAa,EACbC,UAAU,EACVC,QAAQ,EAGRC,SAAS,QACJ,OAAO;AACd,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/C,MAAMC,UAAU,gBAAGP,aAAa,CAA6BQ,SAAS,CAAC;AAEvE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,OAAO,GAAGV,UAAU,CAACM,UAAU,CAAC;EACtC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANID,SAAS;AAUf,MAAMI,cAAoC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAU,KAAK,CAAC;EAC1D,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAS,MAAM,CAAC;EAC5D,MAAMkB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9BD,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;EACA,MAAME,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IAC1CF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAC1BJ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;IAE/BX,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAME,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IAC1C,IAAI,CAACF,GAAG,EAAE;IACVA,GAAG,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IAC5BL,GAAG,CAACG,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IAC3BV,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEX,OAAA,CAACC,UAAU,CAACsB,QAAQ;IAClBC,KAAK,EAAE;MACLd,SAAS;MACTe,WAAW,EAAET,OAAO;MACpBD,QAAQ;MACRH,UAAU;MACVC;IACF,CAAE;IAAAL,QAAA,EAEDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACpB,GAAA,CA1CIF,cAAoC;EAAA,QAGvBT,WAAW;AAAA;AAAAgC,EAAA,GAHxBvB,cAAoC;AA4C1C,SAASJ,SAAS,IAAI4B,MAAM,EAAExB,cAAc,IAAIyB,WAAW;AAAG,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
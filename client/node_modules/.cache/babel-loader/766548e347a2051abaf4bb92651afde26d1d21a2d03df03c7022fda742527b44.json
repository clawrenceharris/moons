{"ast":null,"code":"var _jsxFileName = \"/Users/caleb/Dev/moons_footwear/client/src/context/NavContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavContext = /*#__PURE__*/createContext(undefined);\nconst useNav = () => {\n  _s();\n  const context = useContext(NavContext);\n  if (!context) {\n    throw new Error(\"useNav must be used within a Navigation Provider\");\n  }\n  return context;\n};\n_s(useNav, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst NavProvider = ({\n  children\n}) => {\n  _s2();\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const [activeLink, setActiveLink] = useState(\"home\");\n  const navigate = useNavigate();\n  const openNav = useCallback(() => {\n    const nav = document.getElementById(\"nav\");\n    if (!nav) return;\n    nav.classList.remove(\"closed\");\n    nav.classList.add(\"open\");\n    setIsNavOpen(true);\n  }, []);\n  const closeNav = useCallback(() => {\n    const nav = document.getElementById(\"nav\");\n    if (!nav) return;\n    nav.classList.remove(\"open\");\n    nav.classList.add(\"closed\");\n    setIsNavOpen(false);\n  }, []);\n  useEffect(() => {\n    closeNav();\n  }, [navigate, closeNav]);\n\n  // useEffect(() => {\n  //   if (!isMobile) {\n  //     closeNav();\n  //   }\n  // }, [isMobile]);\n\n  return /*#__PURE__*/_jsxDEV(NavContext.Provider, {\n    value: {\n      isNavOpen,\n      openNav,\n      closeNav,\n      activeLink,\n      setActiveLink\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s2(NavProvider, \"r+iSL7sKefMSxotAGmGEmjbpeMA=\", false, function () {\n  return [useNavigate];\n});\n_c = NavProvider;\nexport { useNav, NavProvider };\nvar _c;\n$RefreshReg$(_c, \"NavProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useCallback","useNavigate","jsxDEV","_jsxDEV","NavContext","undefined","useNav","_s","context","Error","NavProvider","children","_s2","isNavOpen","setIsNavOpen","activeLink","setActiveLink","navigate","openNav","nav","document","getElementById","classList","remove","add","closeNav","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/caleb/Dev/moons_footwear/client/src/context/NavContext.tsx"],"sourcesContent":["import {\n  createContext,\n  useContext,\n  useState,\n  ReactNode,\n  FC,\n  useEffect,\n  use,\n  useCallback,\n} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface NavContextType {\n  isNavOpen: boolean;\n  openNav: () => void;\n  closeNav: () => void;\n  activeLink: string;\n  setActiveLink: (link: string) => void;\n}\n\nconst NavContext = createContext<NavContextType | undefined>(undefined);\n\nconst useNav = () => {\n  const context = useContext(NavContext);\n  if (!context) {\n    throw new Error(\"useNav must be used within a Navigation Provider\");\n  }\n  return context;\n};\n\nconst NavProvider: FC<{ children: ReactNode }> = ({ children }) => {\n  const [isNavOpen, setIsNavOpen] = useState<boolean>(false);\n  const [activeLink, setActiveLink] = useState<string>(\"home\");\n  const navigate = useNavigate();\n\n  const openNav = useCallback(() => {\n    const nav = document.getElementById(\"nav\");\n    if (!nav) return;\n    nav.classList.remove(\"closed\");\n    nav.classList.add(\"open\");\n    setIsNavOpen(true);\n  }, []);\n  const closeNav = useCallback(() => {\n    const nav = document.getElementById(\"nav\");\n    if (!nav) return;\n    nav.classList.remove(\"open\");\n    nav.classList.add(\"closed\");\n    setIsNavOpen(false);\n  }, []);\n\n  useEffect(() => {\n    closeNav();\n  }, [navigate, closeNav]);\n\n  // useEffect(() => {\n  //   if (!isMobile) {\n  //     closeNav();\n  //   }\n  // }, [isMobile]);\n\n  return (\n    <NavContext.Provider\n      value={{\n        isNavOpen,\n        openNav,\n        closeNav,\n        activeLink,\n        setActiveLink,\n      }}\n    >\n      {children}\n    </NavContext.Provider>\n  );\n};\n\nexport { useNav, NavProvider };\n"],"mappings":";;;AAAA,SACEA,aAAa,EACbC,UAAU,EACVC,QAAQ,EAGRC,SAAS,EAETC,WAAW,QACN,OAAO;AACd,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/C,MAAMC,UAAU,gBAAGR,aAAa,CAA6BS,SAAS,CAAC;AAEvE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,OAAO,GAAGX,UAAU,CAACO,UAAU,CAAC;EACtC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANID,MAAM;AAQZ,MAAMI,WAAwC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACjE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAU,KAAK,CAAC;EAC1D,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAS,MAAM,CAAC;EAC5D,MAAMmB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,OAAO,GAAGlB,WAAW,CAAC,MAAM;IAChC,MAAMmB,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IAC1C,IAAI,CAACF,GAAG,EAAE;IACVA,GAAG,CAACG,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IAC9BJ,GAAG,CAACG,SAAS,CAACE,GAAG,CAAC,MAAM,CAAC;IACzBV,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMW,QAAQ,GAAGzB,WAAW,CAAC,MAAM;IACjC,MAAMmB,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IAC1C,IAAI,CAACF,GAAG,EAAE;IACVA,GAAG,CAACG,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;IAC5BJ,GAAG,CAACG,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;IAC3BV,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd0B,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACR,QAAQ,EAAEQ,QAAQ,CAAC,CAAC;;EAExB;EACA;EACA;EACA;EACA;;EAEA,oBACEtB,OAAA,CAACC,UAAU,CAACsB,QAAQ;IAClBC,KAAK,EAAE;MACLd,SAAS;MACTK,OAAO;MACPO,QAAQ;MACRV,UAAU;MACVC;IACF,CAAE;IAAAL,QAAA,EAEDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACnB,GAAA,CA3CIF,WAAwC;EAAA,QAG3BT,WAAW;AAAA;AAAA+B,EAAA,GAHxBtB,WAAwC;AA6C9C,SAASJ,MAAM,EAAEI,WAAW;AAAG,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
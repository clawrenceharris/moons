{"ast":null,"code":"import { create } from \"zustand\";\nimport { fetchAllBrands, fetchAllCategories, fetchAllFlags, fetchAllSubcategories } from \"../api/tags\";\nimport { fetchAllProducts } from \"../api/shop\";\nexport const useProductsStore = create((set, get) => ({\n  products: [],\n  categories: [],\n  subcategories: [],\n  flags: [],\n  brands: [],\n  isLoading: false,\n  error: null,\n  getProducts: async () => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const products = await fetchAllProducts();\n      set({\n        products,\n        isLoading: false\n      });\n    } catch (err) {\n      set({\n        error: err.message,\n        isLoading: false\n      });\n    }\n  },\n  getFilteredProducts: filterFn => {\n    const products = Object.values(get().products);\n    return products.filter(filterFn);\n  },\n  getProductMetadata: async () => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const [categories, subcategories, flags, brands] = await Promise.all([fetchAllCategories(), fetchAllSubcategories(), fetchAllFlags(), fetchAllBrands()]);\n      set({\n        categories,\n        subcategories,\n        flags,\n        brands,\n        isLoading: false\n      });\n    } catch (err) {\n      set({\n        error: err.message,\n        isLoading: false\n      });\n    }\n  }\n}));","map":{"version":3,"names":["create","fetchAllBrands","fetchAllCategories","fetchAllFlags","fetchAllSubcategories","fetchAllProducts","useProductsStore","set","get","products","categories","subcategories","flags","brands","isLoading","error","getProducts","err","message","getFilteredProducts","filterFn","Object","values","filter","getProductMetadata","Promise","all"],"sources":["/Users/caleb/Dev/moons_footwear/client/src/stores/useProductsStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport {\n  Product,\n  ProductBrand,\n  ProductCategory,\n  ProductFlag,\n} from \"../../../shared/types\";\n\nimport {\n  fetchAllBrands,\n  fetchAllCategories,\n  fetchAllFlags,\n  fetchAllSubcategories,\n} from \"../api/tags\";\nimport { fetchAllProducts } from \"../api/shop\";\n\ninterface ProductStore {\n  products: Product[];\n  categories: ProductCategory[];\n  subcategories: ProductCategory[];\n  flags: ProductFlag[];\n  brands: ProductBrand[];\n  isLoading: boolean;\n  error: string | null;\n  getProductMetadata: () => Promise<void>;\n  getProducts: () => Promise<void>;\n  getFilteredProducts: (filter: (product: Product) => boolean) => Product[];\n}\nexport const useProductsStore = create<ProductStore>((set, get) => ({\n  products: [],\n  categories: [],\n  subcategories: [],\n  flags: [],\n  brands: [],\n  isLoading: false,\n  error: null,\n  getProducts: async () => {\n    set({ isLoading: true, error: null });\n    try {\n      const products = await fetchAllProducts();\n\n      set({\n        products,\n        isLoading: false,\n      });\n    } catch (err: any) {\n      set({ error: err.message, isLoading: false });\n    }\n  },\n  getFilteredProducts: (filterFn) => {\n    const products = Object.values(get().products);\n    return products.filter(filterFn);\n  },\n  getProductMetadata: async () => {\n    set({ isLoading: true, error: null });\n    try {\n      const [categories, subcategories, flags, brands] = await Promise.all([\n        fetchAllCategories(),\n        fetchAllSubcategories(),\n        fetchAllFlags(),\n        fetchAllBrands(),\n      ]);\n      set({\n        categories,\n        subcategories,\n        flags,\n        brands,\n        isLoading: false,\n      });\n    } catch (err: any) {\n      set({ error: err.message, isLoading: false });\n    }\n  },\n}));\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAQhC,SACEC,cAAc,EACdC,kBAAkB,EAClBC,aAAa,EACbC,qBAAqB,QAChB,aAAa;AACpB,SAASC,gBAAgB,QAAQ,aAAa;AAc9C,OAAO,MAAMC,gBAAgB,GAAGN,MAAM,CAAe,CAACO,GAAG,EAAEC,GAAG,MAAM;EAClEC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,EAAE;EACdC,aAAa,EAAE,EAAE;EACjBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvBT,GAAG,CAAC;MAAEO,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,gBAAgB,CAAC,CAAC;MAEzCE,GAAG,CAAC;QACFE,QAAQ;QACRK,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOG,GAAQ,EAAE;MACjBV,GAAG,CAAC;QAAEQ,KAAK,EAAEE,GAAG,CAACC,OAAO;QAAEJ,SAAS,EAAE;MAAM,CAAC,CAAC;IAC/C;EACF,CAAC;EACDK,mBAAmB,EAAGC,QAAQ,IAAK;IACjC,MAAMX,QAAQ,GAAGY,MAAM,CAACC,MAAM,CAACd,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC;IAC9C,OAAOA,QAAQ,CAACc,MAAM,CAACH,QAAQ,CAAC;EAClC,CAAC;EACDI,kBAAkB,EAAE,MAAAA,CAAA,KAAY;IAC9BjB,GAAG,CAAC;MAAEO,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAM,CAACL,UAAU,EAAEC,aAAa,EAAEC,KAAK,EAAEC,MAAM,CAAC,GAAG,MAAMY,OAAO,CAACC,GAAG,CAAC,CACnExB,kBAAkB,CAAC,CAAC,EACpBE,qBAAqB,CAAC,CAAC,EACvBD,aAAa,CAAC,CAAC,EACfF,cAAc,CAAC,CAAC,CACjB,CAAC;MACFM,GAAG,CAAC;QACFG,UAAU;QACVC,aAAa;QACbC,KAAK;QACLC,MAAM;QACNC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOG,GAAQ,EAAE;MACjBV,GAAG,CAAC;QAAEQ,KAAK,EAAEE,GAAG,CAACC,OAAO;QAAEJ,SAAS,EAAE;MAAM,CAAC,CAAC;IAC/C;EACF;AACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}